---
- hosts: testing
  become: true
  tasks:
  - name: include vault vars
    include_vars: ~/homelab/ansible/vault.yml
  - name: enable EPEL 
    shell: dnf install -y --nogpgcheck https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E %rhel).noarch.rpm
  - name: enable rpm fusion
    shell: dnf install -y --nogpgcheck https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-$(rpm -E %rhel).noarch.rpm https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-$(rpm -E %rhel).noarch.rpm
  - name: update packages
    dnf: 
      name: "*"
      state: latest
  - name: install needed packages
    dnf:
      pkg:
      - nfs-utils
      - nmap
      - powerline-fonts
      - grubby
      - neovim
      - git
      - cargo
  - name: remove unnecessary packages
    dnf:
      pkg:
        - nano
      state: absent
  - name: disable SELinux
    shell: grubby --update-kernel ALL --args selinux=0
  - name: update fstab
    template:
      src: "{{ home_dir }}/homelab/config-templates/fstab"
      dest: /etc/fstab
  - name: mount all drives
    shell: mount -a
  - name: Install ssh key
    copy: 
      src: "{{ home_dir }}/homelab/config-templates/labkey"
      dest: "{{ home_dir }}/.ssh/labkey"
      mode: 0600
      owner: "{{ user }}"
  - name: deploy dotfiles from git
    git:
      repo: git@github.com:punchy98/dotfiles.git
      dest: "{{ home_dir }}/dotfiles/"
      accept_hostkey: yes
      key_file: "{{ home_dir }}/.ssh/labkey"
  - name: remove current bashrc
    file:
      path: "{{ home_dir }}/.bashrc"
      state: absent
  - name: remove current vimrc
    file:
      path: "{{ home_dir }}/.vimrc"
      state: absent
  - name: Create an nvim directory if it does not exist
    file:
      path: "{{ home_dir }}/.config/nvim"
      state: directory
      mode: '0755'
  - name: Create a symbolic link - vimrc 
    file:
      src: "{{ dotfile_dir }}/vim/.vimrc"
      dest: "{{ home_dir }}/.vimrc"
      owner: "{{ user }}"
      state: link
  - name: Create a symbolic link - bashrc 
    file:
      src: "{{ dotfile_dir }}/bash/.bashrc"
      dest: "{{ home_dir }}/.bashrc"
      owner: "{{ user }}"
      state: link
  - name: Create a symbolic link - git 
    file:
      src: "{{ dotfile_dir }}/git/.gitconfig"
      dest: "{{ home_dir }}/.gitconfig"
      owner: "{{ user }}"
      state: link
  - name: Create a symbolic link - vimrc -> init.vim (neovim) 
    file:
      src: "{{ home_dir }}/.vimrc"
      dest: "{{ home_dir }}/.config/nvim/init.vim" 
      owner: "{{ user }}"
      state: link
  - name: install vim plug
    shell: sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  - name: install bat
    shell: cargo install --locked bat
# - name: reboot
#   reboot:
